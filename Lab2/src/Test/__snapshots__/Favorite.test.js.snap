// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing render Favorite Render from empty storage 1`] = `
<ContextProvider
  value={null}
>
  <Favorite
    data={Object {}}
    setName={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    value={Array []}
  />
</ContextProvider>
`;

exports[`Testing render Favorite Render from empty with both loading and loaded element 1`] = `
<ContextProvider
  value={null}
>
  <Favorite
    data={Object {}}
    setName={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    value={
      Array [
        Object {
          "city": "Kiev",
          "data": Object {
            "CityName": "Kiev",
            "Cod": 200,
            "Humidity": 93,
            "Icon": "09n",
            "Latitude": 50.43,
            "Longitude": 30.52,
            "Pressure": 1014,
            "Temperature": 2.98,
            "Weather": "light intensity drizzle",
            "Wind": 4,
          },
        },
        Object {
          "city": "TEST LOADING CITY",
          "data": Object {},
          "loading": true,
        },
      ]
    }
  />
</ContextProvider>
`;

exports[`Testing render Favorite Render from empty with loading element 1`] = `
<ContextProvider
  value={null}
>
  <Favorite
    data={Object {}}
    setName={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    value={
      Array [
        Object {
          "city": "TEST LOADING CITY",
          "data": Object {},
          "loading": true,
        },
      ]
    }
  />
</ContextProvider>
`;

exports[`Testing render Favorite Render from with loaded element 1`] = `
<ContextProvider
  value={null}
>
  <Favorite
    data={Object {}}
    setName={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    value={
      Array [
        Object {
          "city": "Kiev",
          "data": Object {
            "CityName": "Kiev",
            "Cod": 200,
            "Humidity": 93,
            "Icon": "09n",
            "Latitude": 50.43,
            "Longitude": 30.52,
            "Pressure": 1014,
            "Temperature": 2.98,
            "Weather": "light intensity drizzle",
            "Wind": 4,
          },
        },
      ]
    }
  />
</ContextProvider>
`;
